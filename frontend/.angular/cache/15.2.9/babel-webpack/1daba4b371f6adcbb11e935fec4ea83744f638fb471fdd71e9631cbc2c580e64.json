{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { animate, style, transition, trigger, state } from '@angular/animations';\nimport { Component, ViewChild } from '@angular/core';\nlet ToastComponent = class ToastComponent {\n  constructor(toastService) {\n    this.toastService = toastService;\n    this.bgColor = 'bg-green-200';\n    this.textColor = 'text-green-500';\n    this.typeMessage = 'success';\n    this.message = 'no message';\n  }\n  /* success, warning, info, danger */\n  openToast(bgColor, textColor, typeMessage, message) {\n    this.bgColor = bgColor;\n    this.textColor = textColor;\n    this.typeMessage = typeMessage;\n    this.message = message;\n    document.getElementById('toast-alert').classList.toggle('scale-0');\n    setTimeout(() => {\n      document.getElementById('toast-alert').classList.toggle('scale-0');\n    }, 5000);\n  }\n  closeToast(element) {\n    element.classList.toggle('scale-0');\n  }\n  ngOnInit() {}\n  countDown() {\n    this.progressBar.nativeElement.style.width = this.toastService.data.progressWidth;\n  }\n};\n__decorate([ViewChild('element', {\n  static: false\n}, progressBar)], ToastComponent.prototype, \"progressInterval\", void 0);\nToastComponent = __decorate([Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss'],\n  animations: [trigger('openClose', [state('closed', style({\n    visibility: 'hidden',\n    right: '-400px'\n  })), state('open', style({\n    right: '40px'\n  })), transition('open <=> closed', [animate('0.5s ease-in-out')])])]\n})], ToastComponent);\nexport { ToastComponent };","map":{"version":3,"mappings":";AAAA,SAASA,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,QAAQ,qBAAqB;AAChF,SAASC,SAAS,EAAUC,SAAS,QAAQ,eAAe;AA2BrD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EACzBC,YAAmBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAI/B,YAAO,GAAW,cAAc;IAChC,cAAS,GAAW,gBAAgB;IACpC,gBAAW,GAAW,SAAS;IAC/B,YAAO,GAAW,YAAY;EAPkB;EAQhD;EAEOC,SAAS,CAACC,OAAe,EAAEC,SAAiB,EAAEC,WAAmB,EAAEC,OAAe;IACvF,IAAI,CAACH,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtBC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAE,CAACC,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;IACnEC,UAAU,CAAC,MAAK;MACdJ,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAE,CAACC,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;IACrE,CAAC,EAAE,IAAI,CAAC;EACV;EAEAE,UAAU,CAACC,OAAgB;IACzBA,OAAO,CAACJ,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;EACrC;EAEAI,QAAQ,IAAU;EAElBC,SAAS;IACP,IAAI,CAACC,WAAW,CAACC,aAAa,CAACxB,KAAK,CAACyB,KAAK,GAAG,IAAI,CAACjB,YAAY,CAACkB,IAAI,CAACC,aAAa;EACnF;CACD;AA3BCC,YADCvB,SAAS,CAAC,SAAS,EAAE;EAACwB,MAAM,EAAE;AAAK,CAAC,EAACN,WAAW,CAAC,wDACjC;AAJNjB,cAAc,eAxB1BF,SAAS,CAAC;EACT0B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB,CAAC;EACrCC,UAAU,EAAE,CACV/B,OAAO,CAAC,WAAW,EAAE,CACnBC,KAAK,CACH,QAAQ,EACRH,KAAK,CAAC;IACJkC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE;GACR,CAAC,CACH,EACDhC,KAAK,CACH,MAAM,EACNH,KAAK,CAAC;IACJmC,KAAK,EAAE;GACR,CAAC,CACH,EACDlC,UAAU,CAAC,iBAAiB,EAAE,CAACF,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAC7D,CAAC;CAEL,CAAC,GAEWO,cAAc,CA+B1B;SA/BYA,cAAc","names":["animate","style","transition","trigger","state","Component","ViewChild","ToastComponent","constructor","toastService","openToast","bgColor","textColor","typeMessage","message","document","getElementById","classList","toggle","setTimeout","closeToast","element","ngOnInit","countDown","progressBar","nativeElement","width","data","progressWidth","__decorate","static","selector","templateUrl","styleUrls","animations","visibility","right"],"sourceRoot":"","sources":["/Users/thor/Documents/Applications/foodmine/frontend/src/app/components/partials/toast/toast.component.ts"],"sourcesContent":["import { animate, style, transition, trigger, state } from '@angular/animations';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(\n        'closed',\n        style({\n          visibility: 'hidden',\n          right: '-400px',\n        })\n      ),\n      state(\n        'open',\n        style({\n          right: '40px',\n        })\n      ),\n      transition('open <=> closed', [animate('0.5s ease-in-out')]),\n    ]),\n  ],\n})\n\nexport class ToastComponent implements OnInit {\n  constructor(public toastService: ToastService) {}\n\n  @ViewChild('element', {static: false} progressBar)\n  progressInterval;\n  bgColor: string = 'bg-green-200';\n  textColor: string = 'text-green-500';\n  typeMessage: string = 'success';\n  message: string = 'no message';\n  /* success, warning, info, danger */\n\n  public openToast(bgColor: string, textColor: string, typeMessage: string, message: string): void {\n    this.bgColor = bgColor;\n    this.textColor = textColor;\n    this.typeMessage = typeMessage;\n    this.message = message;\n    document.getElementById('toast-alert')!.classList.toggle('scale-0');\n    setTimeout(() => {\n      document.getElementById('toast-alert')!.classList.toggle('scale-0');\n    }, 5000);\n  }\n\n  closeToast(element: Element): void {\n    element.classList.toggle('scale-0');\n  }\n\n  ngOnInit(): void {}\n\n  countDown() {\n    this.progressBar.nativeElement.style.width = this.toastService.data.progressWidth;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}