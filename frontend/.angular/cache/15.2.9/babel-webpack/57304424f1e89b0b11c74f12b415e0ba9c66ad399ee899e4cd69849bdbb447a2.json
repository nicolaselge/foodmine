{"ast":null,"code":"var _class;\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/toast.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"element\"];\nfunction ToastComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"h5\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.toastService.data.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.toastService.data.content, \" \");\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    success: a0\n  };\n};\nexport class ToastComponent {\n  constructor(toastService) {\n    this.toastService = toastService;\n    this.toastService.open.subscribe(data => {\n      if (data.show) {\n        this.countDown();\n      }\n    });\n  }\n  ngOnInit() {}\n  countDown() {\n    this.progressBar.nativeElement.style.width = this.toastService.data.progressWidth;\n    this.progressInterval = setInterval(() => {\n      const width = parseInt(this.progressBar.nativeElement.style.width, 10);\n      if (width <= 0) {\n        this.toastService.hide();\n        clearInterval(this.progressInterval);\n        return;\n      }\n      this.toastService.data.progressWidth = String(width - 2);\n      this.progressBar.nativeElement.style.width = this.toastService.data.progressWidth + '%';\n    }, 150);\n  }\n  stopCountDown() {\n    clearInterval(this.progressInterval);\n  }\n}\n_class = ToastComponent;\n_class.ɵfac = function ToastComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ToastService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-toast\"]],\n  viewQuery: function ToastComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.progressBar = _t.first);\n    }\n  },\n  decls: 5,\n  vars: 5,\n  consts: [[1, \"toast_wrapper\", 3, \"mouseenter\", \"mouseleave\"], [1, \"inner_wrapper\"], [\"class\", \"flex\", 4, \"ngIf\"], [1, \"progress_bar\", 3, \"ngClass\"], [\"element\", \"\"], [1, \"flex\"], [1, \"toast_content\"], [1, \"toast_title\"], [1, \"toast_text\"]],\n  template: function ToastComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mouseenter\", function ToastComponent_Template_div_mouseenter_0_listener() {\n        return ctx.stopCountDown();\n      })(\"mouseleave\", function ToastComponent_Template_div_mouseleave_0_listener() {\n        return ctx.countDown();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ToastComponent_div_2_Template, 6, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"div\", 3, 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@openClose\", ctx.toastService.data && ctx.toastService.data.show ? \"open\" : \"closed\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.toastService.data);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, ctx.toastService.data && ctx.toastService.data.type === 1));\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b2FzdC5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYXJ0aWFscy90b2FzdC90b2FzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"],\n  data: {\n    animation: [trigger('openClose', [state('closed', style({\n      visibility: 'hidden',\n      right: '-400px'\n    })), state('open', style({\n      right: '40px'\n    })), transition('open <=> closed', [animate('0.5s ease-in-out')])])]\n  }\n});","map":{"version":3,"mappings":";AACA,SACEA,OAAO,EACPC,KAAK,EACLC,KAAK,EACLC,UAAU,EACVC,OAAO,QACF,qBAAqB;;;;;;;ICsBxBC,8BAA4C;IAGtCA,YACF;IAAAA,iBAAK;IACLA,8BAAwB;IACtBA,YACF;IAAAA,iBAAM;;;;IAJJA,eACF;IADEA,+DACF;IAEEA,eACF;IADEA,iEACF;;;;;;;;ADHR,OAAM,MAAOC,cAAc;EAIzBC,YAAmBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAC7B,IAAI,CAACA,YAAY,CAACC,IAAI,CAACC,SAAS,CAAEC,IAAI,IAAI;MACxC,IAAIA,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,CAACC,SAAS,EAAE;;IAEpB,CAAC,CAAC;EACJ;EAEAC,QAAQ,IAAI;EAEZD,SAAS;IACP,IAAI,CAACE,WAAW,CAACC,aAAa,CAACd,KAAK,CAACe,KAAK,GACxC,IAAI,CAACT,YAAY,CAACG,IAAI,CAACO,aAAa;IAEtC,IAAI,CAACC,gBAAgB,GAAGC,WAAW,CAAC,MAAK;MACvC,MAAMH,KAAK,GAAGI,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACC,aAAa,CAACd,KAAK,CAACe,KAAK,EAAE,EAAE,CAAC;MAEtE,IAAIA,KAAK,IAAI,CAAC,EAAE;QACd,IAAI,CAACT,YAAY,CAACc,IAAI,EAAE;QACxBC,aAAa,CAAC,IAAI,CAACJ,gBAAgB,CAAC;QACpC;;MAGF,IAAI,CAACX,YAAY,CAACG,IAAI,CAACO,aAAa,GAAGM,MAAM,CAACP,KAAK,GAAG,CAAC,CAAC;MACxD,IAAI,CAACF,WAAW,CAACC,aAAa,CAACd,KAAK,CAACe,KAAK,GACxC,IAAI,CAACT,YAAY,CAACG,IAAI,CAACO,aAAa,GAAG,GAAG;IAC9C,CAAC,EAAE,GAAG,CAAC;EACT;EAEAO,aAAa;IACXF,aAAa,CAAC,IAAI,CAACJ,gBAAgB,CAAC;EACtC;;SAnCWb,cAAc;;mBAAdA,MAAc;AAAA;;QAAdA,MAAc;EAAAoB;EAAAC;IAAA;;;;;;;;;;;;;MCX3BtB,8BAKC;MAJCA;QAAA,OAAcuB,mBAAe;MAAA,EAAC;QAAA,OAChBA,eAAW;MAAA,EADK;MAK9BvB,8BAA2B;MACzBA,+DASM;MACRA,iBAAM;MAENA,4BAIO;MACTA,iBAAM;;;MApBJA,oGAA8E;MAGzDA,eAAuB;MAAvBA,4CAAuB;MAc1CA,eAA0E;MAA1EA,+GAA0E;;;;;;eD7BhE,CACVD,OAAO,CAAC,WAAW,EAAE,CACnBH,KAAK,CACH,QAAQ,EACRC,KAAK,CAAC;MACJ2B,UAAU,EAAE,QAAQ;MACpBC,KAAK,EAAE;KACR,CAAC,CACH,EACD7B,KAAK,CACH,MAAM,EACNC,KAAK,CAAC;MACJ4B,KAAK,EAAE;KACR,CAAC,CACH,EACD3B,UAAU,CAAC,iBAAiB,EAAE,CAACH,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAC7D,CAAC;EACH;AAAA","names":["animate","state","style","transition","trigger","i0","ToastComponent","constructor","toastService","open","subscribe","data","show","countDown","ngOnInit","progressBar","nativeElement","width","progressWidth","progressInterval","setInterval","parseInt","hide","clearInterval","String","stopCountDown","selectors","viewQuery","ctx","visibility","right"],"sourceRoot":"","sources":["/Users/thor/Documents/Applications/foodmine/frontend/src/app/components/partials/toast/toast.component.ts","/Users/thor/Documents/Applications/foodmine/frontend/src/app/components/partials/toast/toast.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(\n        'closed',\n        style({\n          visibility: 'hidden',\n          right: '-400px',\n        })\n      ),\n      state(\n        'open',\n        style({\n          right: '40px',\n        })\n      ),\n      transition('open <=> closed', [animate('0.5s ease-in-out')]),\n    ]),\n  ],\n})\nexport class ToastComponent implements OnInit {\n  @ViewChild('element', { static: false }) progressBar!: ElementRef;\n  progressInterval;\n\n  constructor(public toastService: ToastService) {\n    this.toastService.open.subscribe((data) => {\n      if (data.show) {\n        this.countDown();\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  countDown() {\n    this.progressBar.nativeElement.style.width =\n      this.toastService.data.progressWidth;\n\n    this.progressInterval = setInterval(() => {\n      const width = parseInt(this.progressBar.nativeElement.style.width, 10);\n\n      if (width <= 0) {\n        this.toastService.hide();\n        clearInterval(this.progressInterval);\n        return;\n      }\n\n      this.toastService.data.progressWidth = String(width - 2);\n      this.progressBar.nativeElement.style.width =\n        this.toastService.data.progressWidth + '%';\n    }, 150);\n  }\n\n  stopCountDown() {\n    clearInterval(this.progressInterval);\n  }\n}\n","<!-- <div class=\"flex items-center justify-end sticky bottom-4 me-4 space-x-4\">\n    <div\n    [@openClose]=\"toastService.data && toastService.data.show ? 'open' : 'closed'\" \n    class=\"transition duration-500 cursor-pointer w-min {{toastService.data.bgColor}} shadow rounded-md py-4 px-4\"\n    (mouseenter)=\"stopCountDown()\" (mouseleave)=\"countDown()\">\n        <div class=\"sm:flex items-center\">\n            <div class=\"flex items-end\">\n                <div class=\"mr-2 mt-0.5 sm:mt-0 {{toastService.data.textColor}}\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"22\" height=\"22\" fill=\"currentColor\">\n                        <path class=\"heroicon-ui\"\n                            d=\"M12 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-2.3-8.7l1.3 1.29 3.3-3.3a1 1 0 0 1 1.4 1.42l-4 4a1 1 0 0 1-1.4 0l-2-2a1 1 0 0 1 1.4-1.42z\" />\n                    </svg>\n                </div>\n                <p class=\"mr-2 text-base font-bold {{toastService.data.textColor}} uppercase\">{{toastService.data.type}}</p>\n            </div>\n            <p class=\"text-base {{toastService.data.textColor}} whitespace-nowrap\">{{toastService.data.message}}</p>\n        </div>\n    </div>\n    <div [ngClass]=\"{success : toastService.data && toastService.data.type === 1 }\" #element></div>\n</div> -->\n\n\n<div\n  (mouseenter)=\"stopCountDown()\"\n  (mouseleave)=\"countDown()\"\n  class=\"toast_wrapper\"\n  [@openClose]=\"toastService.data && toastService.data.show ? 'open' : 'closed'\"\n>\n  <div class=\"inner_wrapper\">\n    <div class=\"flex\" *ngIf=\"toastService.data\">\n      <div class=\"toast_content\">\n        <h5 class=\"toast_title\">\n          {{ toastService.data.title }}\n        </h5>\n        <div class=\"toast_text\">\n          {{ toastService.data.content }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"progress_bar\"\n    [ngClass]=\"{ success: toastService.data && toastService.data.type === 1 }\"\n    #element\n  ></div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}