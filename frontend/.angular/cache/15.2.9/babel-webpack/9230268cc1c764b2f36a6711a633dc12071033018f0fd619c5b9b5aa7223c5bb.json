{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nlet ToastComponent = class ToastComponent {\n  constructor(toastService) {\n    this.toastService = toastService;\n    this.toastService.open.subscribe(data => {\n      if (data.show) {\n        this.countDown();\n      }\n    });\n  }\n  ngOnInit() {}\n  countDown() {\n    this.progressBar.nativeElement.style.width = this.toastService.data.progressWidth;\n    this.progressInterval = setInterval(() => {\n      const width = parseInt(this.progressBar.nativeElement.style.width, 10);\n      if (width <= 0) {\n        this.toastService.hide();\n        clearInterval(this.progressInterval);\n        return;\n      }\n      this.toastService.data.progressWidth = String(width - 2);\n      this.progressBar.nativeElement.style.width = this.toastService.data.progressWidth + '%';\n    }, 150);\n  }\n  stopCountDown() {\n    clearInterval(this.progressInterval);\n  }\n};\n__decorate([ViewChild('element', {\n  static: false\n})], ToastComponent.prototype, \"progressBar\", void 0);\nToastComponent = __decorate([Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss'],\n  animations: [trigger('openClose', [state('closed', style({\n    visibility: 'hidden',\n    right: '-400px'\n  })), state('open', style({\n    right: '40px'\n  })), transition('open <=> closed', [animate('0.5s ease-in-out')])])]\n})], ToastComponent);\nexport { ToastComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAsBC,SAAS,QAAQ,eAAe;AACxE,SACEC,OAAO,EACPC,KAAK,EACLC,KAAK,EACLC,UAAU,EACVC,OAAO,QACF,qBAAqB;AA0BrB,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAmBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAC7B,IAAI,CAACA,YAAY,CAACC,IAAI,CAACC,SAAS,CAAEC,IAAI,IAAI;MACxC,IAAIA,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,CAACC,SAAS,EAAE;;IAEpB,CAAC,CAAC;EACJ;EAEAC,QAAQ,IAAI;EAEZD,SAAS;IACP,IAAI,CAACE,WAAW,CAACC,aAAa,CAACb,KAAK,CAACc,KAAK,GACxC,IAAI,CAACT,YAAY,CAACG,IAAI,CAACO,aAAa;IAEtC,IAAI,CAACC,gBAAgB,GAAGC,WAAW,CAAC,MAAK;MACvC,MAAMH,KAAK,GAAGI,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACC,aAAa,CAACb,KAAK,CAACc,KAAK,EAAE,EAAE,CAAC;MAEtE,IAAIA,KAAK,IAAI,CAAC,EAAE;QACd,IAAI,CAACT,YAAY,CAACc,IAAI,EAAE;QACxBC,aAAa,CAAC,IAAI,CAACJ,gBAAgB,CAAC;QACpC;;MAGF,IAAI,CAACX,YAAY,CAACG,IAAI,CAACO,aAAa,GAAGM,MAAM,CAACP,KAAK,GAAG,CAAC,CAAC;MACxD,IAAI,CAACF,WAAW,CAACC,aAAa,CAACb,KAAK,CAACc,KAAK,GACxC,IAAI,CAACT,YAAY,CAACG,IAAI,CAACO,aAAa,GAAG,GAAG;IAC9C,CAAC,EAAE,GAAG,CAAC;EACT;EAEAO,aAAa;IACXF,aAAa,CAAC,IAAI,CAACJ,gBAAgB,CAAC;EACtC;CACD;AAnC0CO,YAAxC1B,SAAS,CAAC,SAAS,EAAE;EAAE2B,MAAM,EAAE;AAAK,CAAE,CAAC,mDAAyB;AADtDrB,cAAc,eAvB1BP,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB,CAAC;EACrCC,UAAU,EAAE,CACV1B,OAAO,CAAC,WAAW,EAAE,CACnBH,KAAK,CACH,QAAQ,EACRC,KAAK,CAAC;IACJ6B,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE;GACR,CAAC,CACH,EACD/B,KAAK,CACH,MAAM,EACNC,KAAK,CAAC;IACJ8B,KAAK,EAAE;GACR,CAAC,CACH,EACD7B,UAAU,CAAC,iBAAiB,EAAE,CAACH,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAC7D,CAAC;CAEL,CAAC,GACWK,cAAc,CAoC1B;SApCYA,cAAc","names":["Component","ViewChild","animate","state","style","transition","trigger","ToastComponent","constructor","toastService","open","subscribe","data","show","countDown","ngOnInit","progressBar","nativeElement","width","progressWidth","progressInterval","setInterval","parseInt","hide","clearInterval","String","stopCountDown","__decorate","static","selector","templateUrl","styleUrls","animations","visibility","right"],"sourceRoot":"","sources":["/Users/thor/Documents/Applications/foodmine/frontend/src/app/components/partials/toast/toast.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { ToastService } from 'app/services/toast.service';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(\n        'closed',\n        style({\n          visibility: 'hidden',\n          right: '-400px',\n        })\n      ),\n      state(\n        'open',\n        style({\n          right: '40px',\n        })\n      ),\n      transition('open <=> closed', [animate('0.5s ease-in-out')]),\n    ]),\n  ],\n})\nexport class ToastComponent implements OnInit {\n  @ViewChild('element', { static: false }) progressBar: ElementRef;\n  progressInterval;\n\n  constructor(public toastService: ToastService) {\n    this.toastService.open.subscribe((data) => {\n      if (data.show) {\n        this.countDown();\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  countDown() {\n    this.progressBar.nativeElement.style.width =\n      this.toastService.data.progressWidth;\n\n    this.progressInterval = setInterval(() => {\n      const width = parseInt(this.progressBar.nativeElement.style.width, 10);\n\n      if (width <= 0) {\n        this.toastService.hide();\n        clearInterval(this.progressInterval);\n        return;\n      }\n\n      this.toastService.data.progressWidth = String(width - 2);\n      this.progressBar.nativeElement.style.width =\n        this.toastService.data.progressWidth + '%';\n    }, 150);\n  }\n\n  stopCountDown() {\n    clearInterval(this.progressInterval);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}