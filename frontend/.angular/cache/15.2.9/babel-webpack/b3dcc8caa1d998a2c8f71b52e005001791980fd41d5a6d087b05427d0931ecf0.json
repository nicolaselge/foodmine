{"ast":null,"code":"var _class;\nimport { BehaviorSubject, tap } from 'rxjs';\nimport { User } from '../components/shared/user.model';\nimport { USER_LOGIN_URL } from '../components/constants/urls';\nimport { toastTypes } from './toast.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./toast.service\";\nexport class UserService {\n  constructor(http, toast) {\n    this.http = http;\n    this.toast = toast;\n    this.userSubject = new BehaviorSubject(new User());\n    this.user$ = this.userSubject.asObservable();\n  }\n  login(userLogin) {\n    return this.http.post(USER_LOGIN_URL, userLogin).pipe(tap({\n      next: user => {\n        this.userSubject.next(user);\n        this.toast.openToast({\n          message: 'Vous êtes connecté.',\n          type: toastTypes.success\n        });\n      },\n      error: errorResponse => {\n        this.toast.openToast({\n          message: errorResponse.error,\n          type: toastTypes.success\n        });\n      }\n    }));\n  }\n}\n_class = UserService;\n_class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;AACvD,SAASC,IAAI,QAAQ,iCAAiC;AAGtD,SAASC,cAAc,QAAQ,8BAA8B;AAE7D,SAAuBC,UAAU,QAAQ,iBAAiB;;;;AAK1D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB,EAASC,KAAmB;IAA5C,SAAI,GAAJD,IAAI;IAAqB,UAAK,GAALC,KAAK;IAH1C,gBAAW,GAAG,IAAIR,eAAe,CAAO,IAAIE,IAAI,EAAE,CAAC;IAIzD,IAAI,CAACO,KAAK,GAAG,IAAI,CAACC,WAAW,CAACC,YAAY,EAAE;EAC9C;EAEAC,KAAK,CAACC,SAAqB;IACzB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAOX,cAAc,EAAEU,SAAS,CAAC,CAACE,IAAI,CACzDd,GAAG,CAAC;MACFe,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACP,WAAW,CAACM,IAAI,CAACC,IAAI,CAAC;QAC3B,IAAI,CAACT,KAAK,CAACU,SAAS,CAAC;UACnBC,OAAO,EAAE,qBAAqB;UAC9BC,IAAI,EAAEhB,UAAU,CAACiB;SAClB,CAAC;MACJ,CAAC;MACDC,KAAK,EAAGC,aAAa,IAAI;QACvB,IAAI,CAACf,KAAK,CAACU,SAAS,CAAC;UACnBC,OAAO,EAAEI,aAAa,CAACD,KAAK;UAC5BF,IAAI,EAAEhB,UAAU,CAACiB;SAClB,CAAC;MACJ;KACD,CAAC,CACH;EACH;;SA3BWhB,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAmB,SAAXnB,MAAW;EAAAoB,YAFV;AAAM","names":["BehaviorSubject","tap","User","USER_LOGIN_URL","toastTypes","UserService","constructor","http","toast","user$","userSubject","asObservable","login","userLogin","post","pipe","next","user","openToast","message","type","success","error","errorResponse","factory","providedIn"],"sourceRoot":"","sources":["/Users/thor/Documents/Applications/foodmine/frontend/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { User } from '../components/shared/user.model';\nimport { IUserLogin } from '../components/interfaces/IUserLogin';\nimport { HttpClient } from '@angular/common/http';\nimport { USER_LOGIN_URL } from '../components/constants/urls';\nimport { ToastComponent } from '../components/partials/toast/toast.component';\nimport { ToastService, toastTypes } from './toast.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userSubject = new BehaviorSubject<User>(new User());\n  public user$!: Observable<User>;\n\n  constructor(private http: HttpClient, public toast: ToastService) {\n    this.user$ = this.userSubject.asObservable();\n  }\n\n  login(userLogin: IUserLogin): Observable<User> {\n    return this.http.post<User>(USER_LOGIN_URL, userLogin).pipe(\n      tap({\n        next: (user) => {\n          this.userSubject.next(user);\n          this.toast.openToast({\n            message: 'Vous êtes connecté.',\n            type: toastTypes.success,\n          });\n        },\n        error: (errorResponse) => {\n          this.toast.openToast({\n            message: errorResponse.error,\n            type: toastTypes.success,\n          });\n        }\n      })\n    );\n  }\n\n  private setUserToLocalStorage(user:)\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}