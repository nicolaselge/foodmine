{"ast":null,"code":"var _class;\nimport { FOODS_BY_ID_URL, FOODS_BY_SEARCH_URL, FOODS_BY_TAG_URL, FOODS_TAGS_URL, FOODS_URL } from '../components/constants/urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(FOODS_URL);\n  }\n  getAllFoodsBySearchTerm(searchTerm) {\n    return this.http.get(FOODS_BY_SEARCH_URL + searchTerm);\n  }\n  getAllTags() {\n    return this.http.get(FOODS_TAGS_URL);\n  }\n  getAllFoodsByTag(tag) {\n    return tag === 'all' ? this.getAll() : this.http.get(FOODS_BY_TAG_URL + tag);\n  }\n  getFoodById(foodId) {\n    return this.http.get(FOODS_BY_ID_URL + foodId);\n  }\n}\n_class = FoodService;\n_class.ɵfac = function FoodService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,SAASA,eAAe,EAAEC,mBAAmB,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,SAAS,QAAQ,8BAA8B;;;AAKhI,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAASL,SAAS,CAAC;EACzC;EAEAM,uBAAuB,CAACC,UAAkB;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAASR,mBAAmB,GAAGU,UAAU,CAAC;EAChE;EAEAC,UAAU;IACR,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAQN,cAAc,CAAC;EAC7C;EAEAU,gBAAgB,CAACC,GAAW;IAC1B,OAAOA,GAAG,KAAK,KAAK,GAAG,IAAI,CAACN,MAAM,EAAE,GAAG,IAAI,CAACD,IAAI,CAACE,GAAG,CAASP,gBAAgB,GAAGY,GAAG,CAAC;EACtF;EAEAC,WAAW,CAACC,MAAc;IACxB,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAOT,eAAe,GAAGgB,MAAM,CAAC;EACtD;;SAtBWX,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAY,SAAXZ,MAAW;EAAAa,YAFV;AAAM","names":["FOODS_BY_ID_URL","FOODS_BY_SEARCH_URL","FOODS_BY_TAG_URL","FOODS_TAGS_URL","FOODS_URL","FoodService","constructor","http","getAll","get","getAllFoodsBySearchTerm","searchTerm","getAllTags","getAllFoodsByTag","tag","getFoodById","foodId","factory","providedIn"],"sourceRoot":"","sources":["/Users/thor/Documents/Applications/foodmine/frontend/src/app/services/food.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Food } from '../components/shared/food.model';\nimport { sample_foods, sample_tags } from 'src/data';\nimport { Tag } from '../components/shared/tag.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FOODS_BY_ID_URL, FOODS_BY_SEARCH_URL, FOODS_BY_TAG_URL, FOODS_TAGS_URL, FOODS_URL } from '../components/constants/urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Food[]> {\n    return this.http.get<Food[]>(FOODS_URL);\n  }\n\n  getAllFoodsBySearchTerm(searchTerm: string): Observable<Food[]> {\n    return this.http.get<Food[]>(FOODS_BY_SEARCH_URL + searchTerm);\n  }\n\n  getAllTags(): Observable<Tag[]> {\n    return this.http.get<Tag[]>(FOODS_TAGS_URL);\n  }\n\n  getAllFoodsByTag(tag: string): Observable<Food[]> {\n    return tag === 'all' ? this.getAll() : this.http.get<Food[]>(FOODS_BY_TAG_URL + tag);\n  }\n\n  getFoodById(foodId: number): Observable<Food> {\n    return this.http.get<Food>(FOODS_BY_ID_URL + foodId);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}