{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport var toastTypes;\n(function (toastTypes) {\n  toastTypes[toastTypes[\"error\"] = 0] = \"error\";\n  toastTypes[toastTypes[\"info\"] = 1] = \"info\";\n  toastTypes[toastTypes[\"success\"] = 2] = \"success\";\n  toastTypes[toastTypes[\"warning\"] = 3] = \"warning\";\n})(toastTypes || (toastTypes = {}));\n;\nexport class ToastService {\n  constructor() {\n    this.open = new Subject();\n  }\n  openToast(data) {\n    setTimeout(() => {\n      switch (data.type) {\n        case 0:\n          this.colorBg = 'bg-red-200';\n          this.colorText = 'text-red-500';\n          break;\n        case 1:\n          this.colorBg = 'bg-blue-200';\n          this.colorText = 'text-blue-500';\n          break;\n        case 2:\n          this.colorBg = 'bg-green-200';\n          this.colorText = 'text-green-500';\n          break;\n        case 3:\n          this.colorBg = 'bg-yellow-200';\n          this.colorText = 'text-yellow-500';\n          break;\n        default:\n          this.colorBg = 'bg-grey-200';\n          this.colorText = 'text-grey-500';\n          break;\n      }\n      this.data = {\n        ...data,\n        show: true\n      };\n    }, 200);\n    /* Out */\n    setTimeout(() => {\n      document.getElementById('toast-alert').classList.toggle('translate-x-96');\n      setTimeout(() => {\n        document.getElementById('toast-alert').classList.toggle('hidden');\n      }, 200);\n      this.data = {\n        ...this.data,\n        show: false\n      };\n    }, 5000);\n  }\n}\n_class = ToastService;\n_class.ɵfac = function ToastService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,OAAO,QAAQ,MAAM;;AAE9B,WAAYC,UAKX;AALD,WAAYA,UAAU;EACpBA,6CAAK;EACLA,2CAAI;EACJA,iDAAO;EACPA,iDAAO;AACT,CAAC,EALWA,UAAU,KAAVA,UAAU;AAKrB;AAYD,OAAM,MAAOC,YAAY;EAJzBC;IAQS,SAAI,GAAG,IAAIH,OAAO,EAAa;;EAEtCI,SAAS,CAACC,IAAe;IAEvBC,UAAU,CAAC,MAAK;MACd,QAAQD,IAAI,CAACE,IAAI;QACf,KAAK,CAAC;UACJ,IAAI,CAACC,OAAO,GAAG,YAAY;UAC3B,IAAI,CAACC,SAAS,GAAG,cAAc;UAC/B;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,GAAG,aAAa;UAC5B,IAAI,CAACC,SAAS,GAAG,eAAe;UAChC;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,GAAG,cAAc;UAC7B,IAAI,CAACC,SAAS,GAAG,gBAAgB;UACjC;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,GAAG,eAAe;UAC9B,IAAI,CAACC,SAAS,GAAG,iBAAiB;UAClC;QAEF;UACE,IAAI,CAACD,OAAO,GAAG,aAAa;UAC5B,IAAI,CAACC,SAAS,GAAG,eAAe;UAChC;MAAM;MAEV,IAAI,CAACJ,IAAI,GAAG;QAAE,GAAGA,IAAI;QAAEK,IAAI,EAAE;MAAI,CAAC;IACpC,CAAC,EAAE,GAAG,CAAC;IAEP;IACAJ,UAAU,CAAC,MAAK;MACdK,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAE,CAACC,SAAS,CAACC,MAAM,CAAC,gBAAgB,CAAC;MAC1ER,UAAU,CAAC,MAAK;QACdK,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAE,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;MACpE,CAAC,EAAE,GAAG,CAAC;MACP,IAAI,CAACT,IAAI,GAAG;QAAE,GAAG,IAAI,CAACA,IAAI;QAAEK,IAAI,EAAE;MAAK,CAAE;IAC3C,CAAC,EAAE,IAAI,CAAC;EACV;;SA3CWR,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAa,SAAZb,MAAY;EAAAc,YAHX;AAAM","names":["Subject","toastTypes","ToastService","constructor","openToast","data","setTimeout","type","colorBg","colorText","show","document","getElementById","classList","toggle","factory","providedIn"],"sourceRoot":"","sources":["/Users/thor/Documents/Applications/foodmine/frontend/src/app/services/toast.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport enum toastTypes {\n  error,\n  info,\n  success,\n  warning\n};\n\nexport interface ToastData {\n  message: string;\n  type: toastTypes;\n  show?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ToastService {\n  colorBg!: string;\n  colorText!: string;\n  data!: ToastData;\n  public open = new Subject<ToastData>();\n\n  openToast(data: ToastData) {\n    \n    setTimeout(() => {\n      switch (data.type) {\n        case 0:\n          this.colorBg = 'bg-red-200';\n          this.colorText = 'text-red-500';\n          break;\n        case 1:\n          this.colorBg = 'bg-blue-200';\n          this.colorText = 'text-blue-500';\n          break;\n        case 2:\n          this.colorBg = 'bg-green-200';\n          this.colorText = 'text-green-500';\n          break;\n        case 3:\n          this.colorBg = 'bg-yellow-200';\n          this.colorText = 'text-yellow-500';\n          break;\n      \n        default:\n          this.colorBg = 'bg-grey-200';\n          this.colorText = 'text-grey-500';\n          break;\n      }\n      this.data = { ...data, show: true};\n    }, 200)\n\n    /* Out */\n    setTimeout(() => {\n      document.getElementById('toast-alert')!.classList.toggle('translate-x-96');\n      setTimeout(() => {\n        document.getElementById('toast-alert')!.classList.toggle('hidden');\n      }, 200);\n      this.data = { ...this.data, show: false };\n    }, 5000);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}